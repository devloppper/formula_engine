[
  {
    "formula_name": "REPLACEB",
    "formula_desc": "REPLACEB（原字符串，开始位置，字节个数，新字符串)",
    "args_type": [
      "String",
      "Integer",
      "Integer",
      "String"
    ],
    "return_type": "String"
  },
  {
    "formula_name": "INT",
    "formula_desc": "INT(数值) 将数值转成整数 非四舍五入 截取整数",
    "args_type": [
      "Number"
    ],
    "return_type": "Integer"
  },
  {
    "formula_name": "GTE",
    "formula_desc": "GTE(v1,v2) v1 >= v2",
    "args_type":[
      "Any",
      "Any"
    ],
    "return_type": "Bool"
  },
  {
    "formula_name": "LTE",
    "formula_desc": "LTE(v1,v2) v1 <= v2",
    "args_type":[
      "Any",
      "Any"
    ],
    "return_type": "Bool"
  },
  {
    "formula_name": "NEQ",
    "formula_desc": "NEQ(v1,v2) v1 != v2",
    "args_type":[
      "Any",
      "Any"
    ],
    "return_type": "Bool"
  },
  {
    "formula_name": "LT",
    "formula_desc": "LT(v1,v2) v1 < v2",
    "args_type":[
      "Any",
      "Any"
    ],
    "return_type": "Bool"
  },
  {
    "formula_name": "GT",
    "formula_desc": "GT(v1,v2) v1 > v2",
    "args_type":[
      "Any",
      "Any"
    ],
    "return_type": "Bool"
  },
  {
    "formula_name": "EQ",
    "formula_desc": "EQ(v1,v2) v1 == v2",
    "args_type":[
      "Any",
      "Any"
    ],
    "return_type": "Bool"
  },
  {
    "formula_name": "LIKE",
    "formula_desc": "LIKE(pattern, str) 进行字符串匹配 现在进支持 %",
    "args_type":[
      "String",
      "String"
    ],
    "return_type": "Bool"
  },
  {
    "formula_name": "ISBLANK",
    "formula_desc": "ISBLANK(str) 判断str是否是空字符串",
    "args_type": [
      "String"
    ],
    "return_type": "Bool"
  },
  {
    "formula_name": "HASSUBSTR",
    "formula_desc": "HASSUBSTR(strA, strB) 判断字符串strB是否属于字符串strA 大小写敏感",
    "args_type": [
      "String",
      "String"
    ],
    "return_type": "Bool"
  }
]